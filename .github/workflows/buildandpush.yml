name: Docker Build and Push

on:
  push:
    branches:
      - main
    paths:
      - "apps/nextjs/**"
      - "packages/**"
      - ".github/workflows/buildandpush.yml"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get commit hash
        id: get-commit-hash
        run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"

      - name: Get timestamp
        id: get-timestamp
        run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"

      - name: Build and push the tagged docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.AWS_ECR_REPO}}
          IMAGE_TAG: latest
        run: |
          docker build \
            --build-arg ARG_POSTGRES_URL=${{ secrets.ARG_POSTGRES_URL }} \
            --build-arg ARG_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.ARG_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
            -f apps/nextjs/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ec2-3-121-76-2.eu-central-1.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
          envs: |
            TAG=latest
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION=${{secrets.AWS_REGION}}
          script: |
            echo "AWS CLI version: $(aws --version)"
            echo "Docker version: $(docker --version)"

            echo "Stop the current running container if exist..."
            docker stop container_name || true

            echo "Remove the previous container..."
            docker rm container_name || true

            echo "AWS credentials set...."
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            export AWS_REGION=${AWS_REGION}

            echo "Logging in to ECR...."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{secrets.AWS_REGISTRY_URL}}
            echo "Logged in successful..."

            echo "Pulling  image from ECR..."
            echo "Docker pull command: docker pull \"${{ secrets.AWS_REPO_URL }}/${{ secrets.REPOSITORY_NAME }}:latest\""
            echo "Docker pull completed..."

            echo "Running the container..."
            docker run -d \
              -e CLERK_SECRET_KEY=$(aws ssm get-parameter --name "CLERK_SECRET_KEY" --with-decryption --query "Parameter.Value" --output text)
              --name bb_internal_api \
              --env-file  /path/to/dot/env \
              -p ${{ secrets.EXPOSED_PORT }}:${{ secrets.APPLICATION_PORT }} "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:latest"
